/*
Домашнее задание по курсу MS SQL Server Developer в OTUS.
Занятие "02 - Оператор SELECT и простые фильтры, GROUP BY, HAVING".

Задания выполняются с использованием базы данных WideWorldImporters.

Бэкап БД можно скачать отсюда:
https://github.com/Microsoft/sql-server-samples/releases/tag/wide-world-importers-v1.0
Нужен WideWorldImporters-Full.bak

Описание WideWorldImporters от Microsoft:
* https://docs.microsoft.com/ru-ru/sql/samples/wide-world-importers-what-is
* https://docs.microsoft.com/ru-ru/sql/samples/wide-world-importers-oltp-database-catalog
*/

-- ---------------------------------------------------------------------------
-- Задание - написать выборки для получения указанных ниже данных.
-- ---------------------------------------------------------------------------

USE WideWorldImporters

/*
1. Все товары, в названии которых есть "urgent" или название начинается с "Animal".
Вывести: ИД товара (StockItemID), наименование товара (StockItemName).
Таблицы: Warehouse.StockItems.
*/

SELECT [StockItemID]
      ,[StockItemName]
  FROM [WideWorldImporters].[Warehouse].[StockItems]
  WHERE [StockItemName] LIKE '%urgent%' OR [StockItemName] LIKE 'Animal%'

/*
2. Поставщиков (Suppliers), у которых не было сделано ни одного заказа (PurchaseOrders).
Сделать через JOIN, с подзапросом задание принято не будет.
Вывести: ИД поставщика (SupplierID), наименование поставщика (SupplierName).
Таблицы: Purchasing.Suppliers, Purchasing.PurchaseOrders.
По каким колонкам делать JOIN подумайте самостоятельно.
*/

SELECT Sup.SupplierID as [SupplierID],
	  [SupplierName] as [SupplierName]
  FROM [WideWorldImporters].[Purchasing].[Suppliers] AS Sup
  left JOIN [WideWorldImporters].[Purchasing].[PurchaseOrders] AS Pur 
  ON Sup.SupplierID = Pur.SupplierID
  where Pur.SupplierID is NULL;

/*
3. Заказы (Orders) с ценой товара (UnitPrice) более 100$ 
либо количеством единиц (Quantity) товара более 20 штук
и присутствующей датой комплектации всего заказа (PickingCompletedWhen).
Вывести:
* OrderID
* дату заказа (OrderDate) в формате ДД.ММ.ГГГГ
* название месяца, в котором был сделан заказ
* номер квартала, в котором был сделан заказ
* треть года, к которой относится дата заказа (каждая треть по 4 месяца)
* имя заказчика (Customer)
Добавьте вариант этого запроса с постраничной выборкой,
пропустив первую 1000 и отобразив следующие 100 записей.

Сортировка должна быть по номеру квартала, трети года, дате заказа (везде по возрастанию).

Таблицы: Sales.Orders, Sales.OrderLines, Sales.Customers.
*/

SELECT distinct Ord.[OrderID] as [ID]
      ,[OrderDate] as [Дата заказа]
	 ,DATENAME(month, [OrderDate]) as [название месяца]
	 ,DATEpart(quarter, [OrderDate]) as [Номер квартала]
	 ,CASE
	 WHEN MONTH([OrderDate]) BETWEEN '01' AND '04' THEN 1
	 WHEN MONTH([OrderDate]) BETWEEN '05' AND '08' THEN 2
	 WHEN MONTH([OrderDate]) BETWEEN '09' AND '12' THEN 3
	 ELSE '-'
	 END AS [Треть года] 
	 ,Cus.[CustomerName] as [Имя заказчика]
  FROM [WideWorldImporters].[Sales].[Orders] AS Ord 
  JOIN [WideWorldImporters].[Sales].[OrderLines] AS OrdLines
  ON Ord.[OrderID] = OrdLines.[OrderID]
  JOIN [WideWorldImporters].[Sales].[Customers] AS Cus
  ON Ord.[CustomerID] = Cus.[CustomerID]
  where 1=1
  AND (OrdLines.[UnitPrice] > '100' OR OrdLines.[Quantity] > '20')
  AND OrdLines.PickingCompletedWhen IS NOT NULL
  ORDER BY [Номер квартала], [Треть года], [Дата заказа];

  --------------------------------------------------------------------------------------------------------------------------------------

  DECLARE 
	@pagesize BIGINT = 100,
	@pagenum BIGINT = 10;

SELECT distinct Ord.[OrderID] as [ID]
      ,[OrderDate] as [Дата заказа]
	 ,DATENAME(month, [OrderDate]) as [название месяца]
	 ,DATEpart(quarter, [OrderDate]) as [Номер квартала]
	 ,CASE
	 WHEN MONTH([OrderDate]) BETWEEN '01' AND '04' THEN 1
	 WHEN MONTH([OrderDate]) BETWEEN '05' AND '08' THEN 2
	 WHEN MONTH([OrderDate]) BETWEEN '09' AND '12' THEN 3
	 ELSE '-'
	 END AS [Треть года] 
	 ,Cus.[CustomerName] as [Имя заказчика]
  FROM [WideWorldImporters].[Sales].[Orders] AS Ord 
  JOIN [WideWorldImporters].[Sales].[OrderLines] AS OrdLines
  ON Ord.[OrderID] = OrdLines.[OrderID]
  JOIN [WideWorldImporters].[Sales].[Customers] AS Cus
  ON Ord.[CustomerID] = Cus.[CustomerID]
  where 1=1
  AND (OrdLines.[UnitPrice] > '100' OR OrdLines.[Quantity] > '20')
  AND OrdLines.PickingCompletedWhen IS NOT NULL
  ORDER BY [Номер квартала], [Треть года], [Дата заказа]
  OFFSET (@pagenum * @pagesize) ROWS FETCH NEXT @pagesize ROWS ONLY;

/*
4. Заказы поставщикам (Purchasing.Suppliers),
которые должны быть исполнены (ExpectedDeliveryDate) в январе 2013 года
с доставкой "Air Freight" или "Refrigerated Air Freight" (DeliveryMethodName)
и которые исполнены (IsOrderFinalized).
Вывести:
* способ доставки (DeliveryMethodName)
* дата доставки (ExpectedDeliveryDate)
* имя поставщика
* имя контактного лица принимавшего заказ (ContactPerson)

Таблицы: Purchasing.Suppliers, Purchasing.PurchaseOrders, Application.DeliveryMethods, Application.People.
*/

SELECT DelMethod.[DeliveryMethodName] as [способ доставки]
      ,PurOrders.ExpectedDeliveryDate as [дата доставки]
	 ,[SupplierName] as [имя поставщика]
	 ,People.[FullName] as [имя контактного лица принимавшего заказ]
  FROM [WideWorldImporters].[Purchasing].[Suppliers] AS Sup 
  JOIN [WideWorldImporters].[Purchasing].[PurchaseOrders] AS PurOrders
  ON Sup.SupplierID = PurOrders.SupplierID
  JOIN [WideWorldImporters].[Application].[DeliveryMethods] AS DelMethod
  ON PurOrders.[DeliveryMethodID] = DelMethod.DeliveryMethodID
  join [WideWorldImporters].[Application].[People] AS People
  ON PurOrders.[ContactPersonID] = People.[PersonID]
  where 1=1
  AND (PurOrders.ExpectedDeliveryDate BETWEEN '20130101' AND '20130201' 
  AND (DelMethod.DeliveryMethodName = N'Air Freight' OR DelMethod.DeliveryMethodName = N'Refrigerated Air Freight'))
  AND PurOrders.IsOrderFinalized = '1';

/*
5. Десять последних продаж (по дате продажи) с именем клиента и именем сотрудника,
который оформил заказ (SalespersonPerson).
Сделать без подзапросов.
*/

SELECT TOP(10) [OrderID]
	 ,Cus.CustomerName
	 ,Peop.FullName
      ,Orders.[CustomerID]
      ,[SalespersonPersonID]
      ,[PickedByPersonID]
      ,[ContactPersonID]
      ,[BackorderOrderID]
      ,[OrderDate]
      ,[ExpectedDeliveryDate]
      ,[CustomerPurchaseOrderNumber]
      ,[IsUndersupplyBackordered]
      ,[Comments]
      ,[DeliveryInstructions]
      ,[InternalComments]
      ,[PickingCompletedWhen]
      ,Orders.[LastEditedBy]
      ,[LastEditedWhen]
  FROM [WideWorldImporters].[Sales].[Orders] AS Orders
  JOIN [WideWorldImporters].[Sales].[Customers] AS Cus
  ON Orders.CustomerID = Cus.CustomerID
  JOIN [WideWorldImporters].[Application].[People] AS Peop
  ON Orders.ContactPersonID = Peop.PersonID
  ORDER BY [OrderDate] DESC

/*
6. Все ид и имена клиентов и их контактные телефоны,
которые покупали товар "Chocolate frogs 250g".
Имя товара смотреть в таблице Warehouse.StockItems.
*/

SELECT Cus.[CustomerID]
      ,[CustomerName]
      ,[PhoneNumber]
      ,[FaxNumber]
      ,[WebsiteURL]
      ,[DeliveryAddressLine1]
      ,[DeliveryAddressLine2]
      ,[DeliveryPostalCode]
      ,[DeliveryLocation]
      ,[PostalAddressLine1]
      ,[PostalAddressLine2]
      ,[PostalPostalCode]
  FROM [WideWorldImporters].[Sales].[Customers] AS Cus
  JOIN [WideWorldImporters].[Sales].[Orders] AS Orders
  ON Cus.CustomerID = Orders.CustomerID
  JOIN [WideWorldImporters].[Sales].[OrderLines] OrderLines
  ON Orders.OrderID = OrderLines.OrderID
  JOIN [WideWorldImporters].[Warehouse].[StockItems] AS StockItems
  ON OrderLines.StockItemID = StockItems.StockItemID
  where StockItems.[StockItemName] = N'Chocolate frogs 250g'
